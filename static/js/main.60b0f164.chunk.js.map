{"version":3,"sources":["logo.svg","components/weatherApi/weatherApi.js","components/hot/hot.js","components/pic/nasa-Q1p7bh3SHj8-unsplash.jpg","App.js","reportWebVitals.js","index.js"],"names":["weatherApi","query","a","axios","get","params","q","units","APPID","data","Hott","App","useState","setQuery","weather","setWeather","search","e","key","className","style","backgroundImage","pic","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,sBCKFA,EAAU,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACFC,IAAMC,IAJlB,iDAI2B,CACnCC,OAAQ,CACJC,EAAGL,EACHM,MAAQ,SACRC,MAPQ,sCAEU,uBAChBC,EADgB,EAChBA,KADgB,kBAShBA,GATgB,2CAAH,sD,OCqBRC,IC1BA,MAA0B,sDCkD1BC,MA5Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNX,EADM,KACCY,EADD,OAEiBD,mBAAS,IAF1B,mBAENE,EAFM,KAEGC,EAFH,KAIPC,EAAM,uCAAG,WAAMC,GAAN,eAAAf,EAAA,yDACD,SAATe,EAAEC,IADQ,gCAEQlB,EAAWC,GAFnB,OAELQ,EAFK,OAGNM,EAAWN,GACXI,EAAS,IAJH,2CAAH,sDASZ,OACE,sBAAKM,UAAU,iBAAiBC,MAAO,CACrCC,gBAAgB,OAAD,OAASC,EAAT,MADjB,UAIA,uBAAOC,KAAM,OAAOJ,UAAU,SAASK,YAAY,YAAYC,MAAOxB,EAAOyB,SAAU,SAACT,GAAD,OAAOJ,EAASI,EAAEU,OAAOF,QAAQG,WAAYZ,IACnIF,EAAQe,MACP,sBAAMV,UAAU,OAAhB,SACA,sBAAKA,UAAU,OAAf,UACC,qBAAIA,UAAU,YAAd,UACE,+BAAOL,EAAQgB,OACf,8BAAMhB,EAAQiB,IAAIC,aAEpB,sBAAKb,UAAU,YAAf,UACGc,KAAKC,MAAMpB,EAAQe,KAAKM,MACzB,2CAIF,qBAAKhB,UAAU,WAAf,SACG,qBAAKiB,IAAK,2DC3BLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.60b0f164.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\n\nconst URL = \"http://api.openweathermap.org/data/2.5/weather\";\nconst API_KEY = \"0ecbe58641698bac7d66c0ee625f6455\"; \n\nexport const weatherApi = async(query) =>{\n   const {data} = await axios.get(URL, {\n    params: {\n        q :query,\n        units : \"metric\",\n        APPID : API_KEY,\n    }\n\n   });\n   return data;\n}","import {useState} from \"react\";\nimport { weatherApi} from \"../weatherApi/weatherApi\";\n\n    function Hott() {\n        \n    \n        \n        const [weather, setWeather] = useState({});\n        const [query, setQuery] = useState(\"\");\n        const search = async(e) => {\n            if(e.key == \"Enter\"){\n              const data = await weatherApi(query)\n                   setWeather(data);\n                   setQuery(\"\");\n                  }\n                  var i ={uno: function hot() {\n                    if(weather.main.temp > 28){\n                  var hott = \"Damn, you should keep yourself inside with the air-conditioning\";\n                  return hott;\n                }}\n            }\n        \n    return(\n        <div>{i.uno()}</div>\n    )\n}}\nexport default Hott;","export default __webpack_public_path__ + \"static/media/nasa-Q1p7bh3SHj8-unsplash.247c7b29.jpg\";","import logo from './logo.svg';\nimport './App.css';\nimport { weatherApi} from \"./components/weatherApi/weatherApi\";\nimport { useState } from 'react';\nimport Hott from \"./components/hot/hot\";\nimport pic from \"./components/pic/nasa-Q1p7bh3SHj8-unsplash.jpg\";\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = async(e) => {\n    if(e.key == \"Enter\"){\n      const data = await weatherApi(query)\n           setWeather(data);\n           setQuery(\"\");\n          }\n  \n    \n  }\n  return (\n    <div className=\"main-container\" style={{ \n      backgroundImage: `url(${pic})` \n    }}>\n     \n    <input type= \"text\" className=\"search\" placeholder=\"...search\" value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search}/>\n    {weather.main && (\n      <main className=\"card\">\n      <div className=\"city\">\n       <h2 className=\"city-name\">\n         <span>{weather.name}</span>\n         <sup>{weather.sys.country}</sup>\n       </h2>\n       <div className=\"city-lamp\">\n         {Math.round(weather.main.temp)}\n         <sup>&deg;C</sup>\n     \n\n       </div>\n       <div className=\"city-img\">\n          <img src={\"http://openweathermap.org/img/wn/10d@2x.png\"}/>\n       </div>\n       \n       </div>\n       </main> \n    )}\n   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}